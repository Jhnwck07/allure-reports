{"uid":"a5dd63746f8f54f4","name":"TC002 - Login Failure with Invalid Username","fullName":"Xeed_Login_Page.Test_TC002#test_site","historyId":"725b2a7dd54dfb4164c4540657c0f3b1","time":{"start":1749201015178,"stop":1749201028553,"duration":13375},"description":"\n**Test Scenario:**  \nAttempt to log in with an incorrect password (username: Rohit, password: 99027).\n\n**Expected Result:**  \nUser should NOT be redirected to the dashboard.  \nAn 'Invalid credentials' message should be displayed.\n","descriptionHtml":"<p><strong>Test Scenario:</strong><br />\nAttempt to log in with an incorrect password (username: Rohit, password: 99027).</p>\n<p><strong>Expected Result:</strong><br />\nUser should NOT be redirected to the dashboard.<br />\nAn 'Invalid credentials' message should be displayed.</p>\n","status":"failed","statusMessage":"Failed: Login failed - URL did not change to dashboard","statusTrace":"setup = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"c14d08d8-146f-4aac-8ec0-db9d73a35a99\")>\n\n    @allure.feature(\"XEED_Ventures_Login_Page\")\n    @allure.title(\"TC002 - Login Failure with Invalid Username\")\n    @allure.description(\"\"\"\n    **Test Scenario:**\n    Attempt to log in with an incorrect password (username: Rohit, password: 99027).\n    \n    **Expected Result:**\n    User should NOT be redirected to the dashboard.\n    An 'Invalid credentials' message should be displayed.\n    \"\"\")\n    \n    def test_site(setup):\n        driver = setup\n        wait = WebDriverWait(driver, 10)  # 10 seconds explicit wait\n    \n        with allure.step(\"Open Xeed Ventures Login Page\"):\n            driver.get(\"http://157.15.202.244:88/authentication/login\")\n    \n        with allure.step(\"Wait for and click on username field\"):\n            element = wait.until(EC.element_to_be_clickable((By.XPATH, \"//input[@id='username']\")))\n            element.click()\n    \n        with allure.step(\"Type in the username\"):\n            element.send_keys(\"Chethan\")\n    \n        with allure.step(\"Wait for and click on password field\"):\n            element = wait.until(EC.element_to_be_clickable((By.XPATH, \"//input[@id='password']\")))\n            element.click()\n    \n        with allure.step(\"Type in the password\"):\n            element.send_keys(\"Erp@123\")\n    \n        with allure.step(\"Wait for and press Login button\"):\n            element = wait.until(EC.element_to_be_clickable((By.XPATH, \"//button[normalize-space()='Login']\")))\n            element.click()\n    \n        with allure.step(\"Wait for URL to change to dashboard\"):\n            try:\n>               wait.until(EC.url_contains(\"/dashboard\"))\n\nXeed_Login_Page\\Test_TC002.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"c14d08d8-146f-4aac-8ec0-db9d73a35a99\")>, method = <function url_contains.<locals>._predicate at 0x00000228F08189A0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nsetup = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"c14d08d8-146f-4aac-8ec0-db9d73a35a99\")>\n\n    @allure.feature(\"XEED_Ventures_Login_Page\")\n    @allure.title(\"TC002 - Login Failure with Invalid Username\")\n    @allure.description(\"\"\"\n    **Test Scenario:**\n    Attempt to log in with an incorrect password (username: Rohit, password: 99027).\n    \n    **Expected Result:**\n    User should NOT be redirected to the dashboard.\n    An 'Invalid credentials' message should be displayed.\n    \"\"\")\n    \n    def test_site(setup):\n        driver = setup\n        wait = WebDriverWait(driver, 10)  # 10 seconds explicit wait\n    \n        with allure.step(\"Open Xeed Ventures Login Page\"):\n            driver.get(\"http://157.15.202.244:88/authentication/login\")\n    \n        with allure.step(\"Wait for and click on username field\"):\n            element = wait.until(EC.element_to_be_clickable((By.XPATH, \"//input[@id='username']\")))\n            element.click()\n    \n        with allure.step(\"Type in the username\"):\n            element.send_keys(\"Chethan\")\n    \n        with allure.step(\"Wait for and click on password field\"):\n            element = wait.until(EC.element_to_be_clickable((By.XPATH, \"//input[@id='password']\")))\n            element.click()\n    \n        with allure.step(\"Type in the password\"):\n            element.send_keys(\"Erp@123\")\n    \n        with allure.step(\"Wait for and press Login button\"):\n            element = wait.until(EC.element_to_be_clickable((By.XPATH, \"//button[normalize-space()='Login']\")))\n            element.click()\n    \n        with allure.step(\"Wait for URL to change to dashboard\"):\n            try:\n                wait.until(EC.url_contains(\"/dashboard\"))\n            except:\n                allure.attach(driver.current_url, name=\"Current URL on failure\", attachment_type=allure.attachment_type.TEXT)\n>               pytest.fail(\"Login failed - URL did not change to dashboard\")\nE               Failed: Login failed - URL did not change to dashboard\n\nXeed_Login_Page\\Test_TC002.py:52: Failed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"setup","time":{"start":1749200999955,"stop":1749201015177,"duration":15222},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"description":"\n**Test Scenario:**  \nAttempt to log in with an incorrect password (username: Rohit, password: 99027).\n\n**Expected Result:**  \nUser should NOT be redirected to the dashboard.  \nAn 'Invalid credentials' message should be displayed.\n","status":"failed","statusMessage":"Failed: Login failed - URL did not change to dashboard","statusTrace":"setup = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"c14d08d8-146f-4aac-8ec0-db9d73a35a99\")>\n\n    @allure.feature(\"XEED_Ventures_Login_Page\")\n    @allure.title(\"TC002 - Login Failure with Invalid Username\")\n    @allure.description(\"\"\"\n    **Test Scenario:**\n    Attempt to log in with an incorrect password (username: Rohit, password: 99027).\n    \n    **Expected Result:**\n    User should NOT be redirected to the dashboard.\n    An 'Invalid credentials' message should be displayed.\n    \"\"\")\n    \n    def test_site(setup):\n        driver = setup\n        wait = WebDriverWait(driver, 10)  # 10 seconds explicit wait\n    \n        with allure.step(\"Open Xeed Ventures Login Page\"):\n            driver.get(\"http://157.15.202.244:88/authentication/login\")\n    \n        with allure.step(\"Wait for and click on username field\"):\n            element = wait.until(EC.element_to_be_clickable((By.XPATH, \"//input[@id='username']\")))\n            element.click()\n    \n        with allure.step(\"Type in the username\"):\n            element.send_keys(\"Chethan\")\n    \n        with allure.step(\"Wait for and click on password field\"):\n            element = wait.until(EC.element_to_be_clickable((By.XPATH, \"//input[@id='password']\")))\n            element.click()\n    \n        with allure.step(\"Type in the password\"):\n            element.send_keys(\"Erp@123\")\n    \n        with allure.step(\"Wait for and press Login button\"):\n            element = wait.until(EC.element_to_be_clickable((By.XPATH, \"//button[normalize-space()='Login']\")))\n            element.click()\n    \n        with allure.step(\"Wait for URL to change to dashboard\"):\n            try:\n>               wait.until(EC.url_contains(\"/dashboard\"))\n\nXeed_Login_Page\\Test_TC002.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"c14d08d8-146f-4aac-8ec0-db9d73a35a99\")>, method = <function url_contains.<locals>._predicate at 0x00000228F08189A0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nsetup = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"c14d08d8-146f-4aac-8ec0-db9d73a35a99\")>\n\n    @allure.feature(\"XEED_Ventures_Login_Page\")\n    @allure.title(\"TC002 - Login Failure with Invalid Username\")\n    @allure.description(\"\"\"\n    **Test Scenario:**\n    Attempt to log in with an incorrect password (username: Rohit, password: 99027).\n    \n    **Expected Result:**\n    User should NOT be redirected to the dashboard.\n    An 'Invalid credentials' message should be displayed.\n    \"\"\")\n    \n    def test_site(setup):\n        driver = setup\n        wait = WebDriverWait(driver, 10)  # 10 seconds explicit wait\n    \n        with allure.step(\"Open Xeed Ventures Login Page\"):\n            driver.get(\"http://157.15.202.244:88/authentication/login\")\n    \n        with allure.step(\"Wait for and click on username field\"):\n            element = wait.until(EC.element_to_be_clickable((By.XPATH, \"//input[@id='username']\")))\n            element.click()\n    \n        with allure.step(\"Type in the username\"):\n            element.send_keys(\"Chethan\")\n    \n        with allure.step(\"Wait for and click on password field\"):\n            element = wait.until(EC.element_to_be_clickable((By.XPATH, \"//input[@id='password']\")))\n            element.click()\n    \n        with allure.step(\"Type in the password\"):\n            element.send_keys(\"Erp@123\")\n    \n        with allure.step(\"Wait for and press Login button\"):\n            element = wait.until(EC.element_to_be_clickable((By.XPATH, \"//button[normalize-space()='Login']\")))\n            element.click()\n    \n        with allure.step(\"Wait for URL to change to dashboard\"):\n            try:\n                wait.until(EC.url_contains(\"/dashboard\"))\n            except:\n                allure.attach(driver.current_url, name=\"Current URL on failure\", attachment_type=allure.attachment_type.TEXT)\n>               pytest.fail(\"Login failed - URL did not change to dashboard\")\nE               Failed: Login failed - URL did not change to dashboard\n\nXeed_Login_Page\\Test_TC002.py:52: Failed","steps":[{"name":"Open Xeed Ventures Login Page","time":{"start":1749201015178,"stop":1749201016831,"duration":1653},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"Wait for and click on username field","time":{"start":1749201016831,"stop":1749201017433,"duration":602},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"Type in the username","time":{"start":1749201017433,"stop":1749201017578,"duration":145},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"Wait for and click on password field","time":{"start":1749201017579,"stop":1749201018108,"duration":529},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"Type in the password","time":{"start":1749201018108,"stop":1749201018160,"duration":52},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"Wait for and press Login button","time":{"start":1749201018160,"stop":1749201018454,"duration":294},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"Wait for URL to change to dashboard","time":{"start":1749201018455,"stop":1749201028551,"duration":10096},"status":"failed","statusMessage":"Failed: Login failed - URL did not change to dashboard\n","statusTrace":"  File \"C:\\Users\\sagar\\PycharmProjects\\TestingProject\\Xeed_Login_Page\\Test_TC002.py\", line 52, in test_site\n    pytest.fail(\"Login failed - URL did not change to dashboard\")\n    ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\sagar\\PycharmProjects\\TestingProject\\venv\\Lib\\site-packages\\_pytest\\outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[],"attachments":[{"uid":"652fccdfd6484427","name":"Current URL on failure","source":"652fccdfd6484427.txt","type":"text/plain","size":45}],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":1}],"attachments":[],"parameters":[],"stepsCount":7,"attachmentStep":false,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":1},"afterStages":[{"name":"setup::0","time":{"start":1749201028566,"stop":1749201032750,"duration":4184},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"feature","value":"XEED_Ventures_Login_Page"},{"name":"parentSuite","value":"Xeed_Login_Page"},{"name":"suite","value":"Test_TC002"},{"name":"host","value":"DESKTOP-0Q1NQ4H"},{"name":"thread","value":"31228-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Xeed_Login_Page.Test_TC002"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"setup","value":"'firefox'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"a5dd63746f8f54f4.json","parameterValues":["'firefox'"]}