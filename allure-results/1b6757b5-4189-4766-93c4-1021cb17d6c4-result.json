{"name": "TC015 - Testing the **Passwords do not match** text", "status": "failed", "statusDetails": {"message": "Failed: Element not found within the wait time", "trace": "setup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"fae4cd0881445b2c3d4b88621fcb4578\")>\n\n    @allure.feature(\"XEED_Ventures_Login_Page\")\n    @allure.title(\"TC015 - Testing the **Passwords do not match** text\")\n    @allure.description(\"\"\"\n    **Test Type**\n    Functional and cross-browser testing\n    \n    **Test Scenario**\n    Entering the email, new password but entering different password in confirm password field and waiting till the **Passwords do not match text**\n    \n    **Input data**\n    Email: Sk12@gmail.com\n    New Password: cpktnwt\n    Confirm Password: chethan\n    \n    **Test passes if**\n    The **Valid email is required** text is displayed.\n    \"\"\")\n    \n    def test_suite(setup):\n        driver = setup\n        wait = WebDriverWait(driver, 10)\n    \n        with allure.step(\"Login Page is opened\"):\n            driver.get(\"http://157.15.202.244:99/authentication/login\")\n    \n        with allure.step(\"Clicking on 'Forgot Password?' link\"):\n            element = wait.until(EC.element_to_be_clickable((By.XPATH, \"//a[normalize-space()='Forgot Password?']\")))\n            element.click()\n    \n        with allure.step(\"Entering the Email\"):\n            element = wait.until(EC.element_to_be_clickable((By.XPATH, \"//input[@formcontrolname='email']\")))\n            element.click()\n            element.send_keys(\"Sk12@gmail.com\")\n    \n        with allure.step(\"Entering the NewPassword\"):\n            element = wait.until(EC.element_to_be_clickable((By.XPATH, \"//input[@formcontrolname='newPassword']\")))\n            element.click()\n            element.send_keys(\"cpktnwt\")\n    \n        with allure.step(\"Entering the password in Confirm Password field\"):\n            element = wait.until(EC.element_to_be_clickable((By.XPATH, \"//input[@formcontrolname='confirmPassword']\")))\n            element.click()\n            element.send_keys(\"chethan\")\n    \n        with allure.step(\"Validating 'Passwords do not match' error is shown\"):\n            try:\n>               element = wait.until(EC.visibility_of_element_located((By.XPATH, \"//div[@class='error ng-star-inserted']\")))\n\nXeed_Login_Page\\Test_TC014.py:54: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"fae4cd0881445b2c3d4b88621fcb4578\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x00000186416974C0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x1233783+63299]\nE       \tGetHandleVerifier [0x0x12337c4+63364]\nE       \t(No symbol) [0x0x1061113]\nE       \t(No symbol) [0x0x10a987e]\nE       \t(No symbol) [0x0x10a9c1b]\nE       \t(No symbol) [0x0x10f2212]\nE       \t(No symbol) [0x0x10ce5c4]\nE       \t(No symbol) [0x0x10efa4a]\nE       \t(No symbol) [0x0x10ce376]\nE       \t(No symbol) [0x0x109d6e0]\nE       \t(No symbol) [0x0x109e544]\nE       \tGetHandleVerifier [0x0x148e073+2531379]\nE       \tGetHandleVerifier [0x0x1489372+2511666]\nE       \tGetHandleVerifier [0x0x1259efa+220858]\nE       \tGetHandleVerifier [0x0x124a548+156936]\nE       \tGetHandleVerifier [0x0x1250c7d+183357]\nE       \tGetHandleVerifier [0x0x123b6e8+95912]\nE       \tGetHandleVerifier [0x0x123b890+96336]\nE       \tGetHandleVerifier [0x0x122666a+9770]\nE       \tBaseThreadInitThunk [0x0x76925d49+25]\nE       \tRtlInitializeExceptionChain [0x0x77e2d09b+107]\nE       \tRtlGetAppContainerNamedObjectPath [0x0x77e2d021+561]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"fae4cd0881445b2c3d4b88621fcb4578\")>\n\n    @allure.feature(\"XEED_Ventures_Login_Page\")\n    @allure.title(\"TC015 - Testing the **Passwords do not match** text\")\n    @allure.description(\"\"\"\n    **Test Type**\n    Functional and cross-browser testing\n    \n    **Test Scenario**\n    Entering the email, new password but entering different password in confirm password field and waiting till the **Passwords do not match text**\n    \n    **Input data**\n    Email: Sk12@gmail.com\n    New Password: cpktnwt\n    Confirm Password: chethan\n    \n    **Test passes if**\n    The **Valid email is required** text is displayed.\n    \"\"\")\n    \n    def test_suite(setup):\n        driver = setup\n        wait = WebDriverWait(driver, 10)\n    \n        with allure.step(\"Login Page is opened\"):\n            driver.get(\"http://157.15.202.244:99/authentication/login\")\n    \n        with allure.step(\"Clicking on 'Forgot Password?' link\"):\n            element = wait.until(EC.element_to_be_clickable((By.XPATH, \"//a[normalize-space()='Forgot Password?']\")))\n            element.click()\n    \n        with allure.step(\"Entering the Email\"):\n            element = wait.until(EC.element_to_be_clickable((By.XPATH, \"//input[@formcontrolname='email']\")))\n            element.click()\n            element.send_keys(\"Sk12@gmail.com\")\n    \n        with allure.step(\"Entering the NewPassword\"):\n            element = wait.until(EC.element_to_be_clickable((By.XPATH, \"//input[@formcontrolname='newPassword']\")))\n            element.click()\n            element.send_keys(\"cpktnwt\")\n    \n        with allure.step(\"Entering the password in Confirm Password field\"):\n            element = wait.until(EC.element_to_be_clickable((By.XPATH, \"//input[@formcontrolname='confirmPassword']\")))\n            element.click()\n            element.send_keys(\"chethan\")\n    \n        with allure.step(\"Validating 'Passwords do not match' error is shown\"):\n            try:\n                element = wait.until(EC.visibility_of_element_located((By.XPATH, \"//div[@class='error ng-star-inserted']\")))\n                assert element.is_displayed(), \"Expected 'Passwords do not match' message not visible\"\n                allure.attach(element.text, name= \"Text displayed\", attachment_type=allure.attachment_type.TEXT )\n    \n            except TimeoutException as e:\n                allure.attach(str(e), name=\"TimeoutException\", attachment_type=allure.attachment_type.TEXT)\n>               pytest.fail(\"Element not found within the wait time\")\nE               Failed: Element not found within the wait time\n\nXeed_Login_Page\\Test_TC014.py:60: Failed"}, "description": "\n**Test Type**  \nFunctional and cross-browser testing\n\n**Test Scenario**\nEntering the email, new password but entering different password in confirm password field and waiting till the **Passwords do not match text**\n\n**Input data**\nEmail: Sk12@gmail.com\nNew Password: cpktnwt\nConfirm Password: chethan\n\n**Test passes if**\nThe **Valid email is required** text is displayed.\n", "steps": [{"name": "Login Page is opened", "status": "passed", "start": 1750151591171, "stop": 1750151593226}, {"name": "Clicking on 'Forgot Password?' link", "status": "passed", "start": 1750151593227, "stop": 1750151593450}, {"name": "Entering the Email", "status": "passed", "start": 1750151593450, "stop": 1750151593756}, {"name": "Entering the NewPassword", "status": "passed", "start": 1750151593756, "stop": 1750151593887}, {"name": "Entering the password in Confirm Password field", "status": "passed", "start": 1750151593887, "stop": 1750151593987}, {"name": "Validating 'Passwords do not match' error is shown", "status": "failed", "statusDetails": {"message": "Failed: Element not found within the wait time\n", "trace": "  File \"C:\\Users\\sagar\\PycharmProjects\\TestingProject\\Xeed_Login_Page\\Test_TC014.py\", line 60, in test_suite\n    pytest.fail(\"Element not found within the wait time\")\n    ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\sagar\\PycharmProjects\\TestingProject\\venv\\Lib\\site-packages\\_pytest\\outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n"}, "attachments": [{"name": "TimeoutException", "source": "00270817-dc55-42a9-bcaf-669205065b3b-attachment.txt", "type": "text/plain"}], "start": 1750151593987, "stop": 1750151604340}], "parameters": [{"name": "setup", "value": "'firefox'"}], "start": 1750151591171, "stop": 1750151604383, "uuid": "fdcb4ebe-1b65-409c-b130-f3af996ad5cc", "historyId": "ab6834bf879f307d699dd1b4f52c19f0", "testCaseId": "92a9bd4289bc59d9c63837d1d5e4006a", "fullName": "Xeed_Login_Page.Test_TC014#test_suite", "labels": [{"name": "feature", "value": "XEED_Ventures_Login_Page"}, {"name": "parentSuite", "value": "Xeed_Login_Page"}, {"name": "suite", "value": "Test_TC014"}, {"name": "host", "value": "DESKTOP-0Q1NQ4H"}, {"name": "thread", "value": "12016-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Xeed_Login_Page.Test_TC014"}]}